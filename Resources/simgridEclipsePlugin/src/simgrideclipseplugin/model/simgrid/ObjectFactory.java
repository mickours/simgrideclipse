//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.29 at 03:18:10 PM CEST 
//


package simgrideclipseplugin.model.simgrid;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the simgrideclipseplugin.model package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: simgrideclipseplugin.model
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Prop }
     * 
     */
    public Prop createProp() {
        return new Prop();
    }

    /**
     * Create an instance of {@link Link }
     * 
     */
    public Link createLink() {
        return new Link();
    }

    /**
     * Create an instance of {@link Argument }
     * 
     */
    public Argument createArgument() {
        return new Argument();
    }

    /**
     * Create an instance of {@link ASroute }
     * 
     */
    public ASroute createASroute() {
        return new ASroute();
    }

    /**
     * Create an instance of {@link Trace }
     * 
     */
    public Trace createTrace() {
        return new Trace();
    }

    /**
     * Create an instance of {@link TraceConnect }
     * 
     */
    public TraceConnect createTraceConnect() {
        return new TraceConnect();
    }

    /**
     * Create an instance of {@link StorageType }
     * 
     */
    public StorageType createStorageType() {
        return new StorageType();
    }

    /**
     * Create an instance of {@link Route }
     * 
     */
    public Route createRoute() {
        return new Route();
    }

    /**
     * Create an instance of {@link Host }
     * 
     */
    public Host createHost() {
        return new Host();
    }

    /**
     * Create an instance of {@link BypassASroute }
     * 
     */
    public BypassASroute createBypassASroute() {
        return new BypassASroute();
    }

    /**
     * Create an instance of {@link BypassRoute }
     * 
     */
    public BypassRoute createBypassRoute() {
        return new BypassRoute();
    }

    /**
     * Create an instance of {@link Config }
     * 
     */
    public Config createConfig() {
        return new Config();
    }

    /**
     * Create an instance of {@link LinkCtn }
     * 
     */
    public LinkCtn createLinkCtn() {
        return new LinkCtn();
    }

    /**
     * Create an instance of {@link Process }
     * 
     */
    public Process createProcess() {
        return new Process();
    }

    /**
     * Create an instance of {@link Peer }
     * 
     */
    public Peer createPeer() {
        return new Peer();
    }

    /**
     * Create an instance of {@link Storage }
     * 
     */
    public Storage createStorage() {
        return new Storage();
    }

    /**
     * Create an instance of {@link Mount }
     * 
     */
    public Mount createMount() {
        return new Mount();
    }

    /**
     * Create an instance of {@link Cluster }
     * 
     */
    public Cluster createCluster() {
        return new Cluster();
    }

    /**
     * Create an instance of {@link Router }
     * 
     */
    public Router createRouter() {
        return new Router();
    }

    /**
     * Create an instance of {@link AS }
     * 
     */
    public AS createAS() {
        return new AS();
    }

    /**
     * Create an instance of {@link Platform }
     * 
     */
    public Platform createPlatform() {
        return new Platform();
    }

    /**
     * Create an instance of {@link Mstorage }
     * 
     */
    public Mstorage createMstorage() {
        return new Mstorage();
    }

    /**
     * Create an instance of {@link Random }
     * 
     */
    public Random createRandom() {
        return new Random();
    }

    /**
     * Create an instance of {@link Include }
     * 
     */
    public Include createInclude() {
        return new Include();
    }

}
